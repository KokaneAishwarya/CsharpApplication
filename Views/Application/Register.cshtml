@model RegisterModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Registration Form in HTML CSS</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <srcipt src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.0.2.js"></srcipt>"
    <srcipt src="https://ajax.aspnetcdn.com/ajax/mvc/5.0/jquery.validate.unobtrusive.min.js"></srcipt>
    <script src="https://ajax.aspnetcdn.com/ajax/mvc/5.0/jquery.validate.unobtrusive.js"></script>
    <!---Custom CSS File--->
    <style type="text/css">
        /* Import Google font - Poppins */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Poppins", sans-serif;
        }

        body {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%);
        }

        .container {
            position: relative;
            max-width: 700px;
            width: 100%;
            background: #fff;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }

            .container header {
                font-size: 1.5rem;
                color: #333;
                font-weight: 500;
                text-align: center;
            }

        .container {
            margin-top: 30px;
        }

        .input-box {
            width: 100%;
            margin-top: 20px;
        }

            .input-box label {
                color: green;
                font-size: 20px;
                font-weight: bold
            }

            .input-box input .select-box {
                position: relative;
                height: 50px;
                width: 100%;
                outline: none;
                font-size: 1rem;
                color: #707070;
                margin-top: 8px;
                border: 1px solid #ddd;
                border-radius: 6px;
                padding: 0 15px;
            }

            .input-box input:focus {
                box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
            }

        .column {
            display: flex;
            column-gap: 15px;
        }

        .form .gender-box {
            margin-top: 20px;
        }

        .gender-box h3 {
            color: #333;
            font-size: 1rem;
            font-weight: 400;
            margin-bottom: 8px;
        }

        .form :where(.gender-option, .gender) {
            display: flex;
            align-items: center;
            column-gap: 50px;
            flex-wrap: wrap;
        }

        .form .gender {
            column-gap: 5px;
        }


        .gender input {
            accent-color: rgb(130, 106, 251);
        }

        .form :where(.gender input, .gender label) {
            cursor: pointer;
        }

        .gender label {
            color: #707070;
        }

        .address :where(input, .select-box) {
            margin-top: 15px;
        }

        .select-box select {
            height: 100%;
            width: 100%;
            outline: none;
            border: none;
            color: #707070;
            font-size: 1rem;
        }

        button {
            height: 55px;
            width: 100%;
            color: #fff;
            font-size: 1rem;
            font-weight: 400;
            margin-top: 30px;
            border: none;
            cursor: pointer;
            transition: all 0.2s ease;
            background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%);
        }

            button:hover {
                background: rgb(88, 56, 250);
            }

    </style>
</head>
<body>
    <!--The anti-forgery token can be used to help protect your application against cross-site request forgery. To use this feature, call the AntiForgeryToken method from a form and add the ValidateAntiForgeryTokenAttribute attribute to the action method that you want to protect.

     Generates a hidden form field(anti - forgery token) that is validated when the form is submitted.-->

    <section class="container">
        <header>Registration Form</header>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="input-box">
                <label>ID<span class="text-danger">*</span> </label>
                @Html.TextBoxFor(model=>model.ID,new {@class="form-control",placeholder="enter id"})
                @Html.ValidationMessageFor(model=>model.ID,"",new {@class="text-danger"})
            </div>

            <div class="input-box">
                <label>FirstName<span class="text-danger">*</span> </label>
                @Html.TextBoxFor(model=>model.FirstName,new {@class="form-control",placeholder="enter firstname"})
                @Html.ValidationMessageFor(model=>model.FirstName,"",new {@class="text-danger"})
            </div>

            <div class="input-box">
                <label>LastName<span class="text-danger">*</span> </label>
                @Html.TextBoxFor(model=>model.LastName,new {@class="form-control",placeholder="enter lastname"})
                @Html.ValidationMessageFor(model=>model.LastName,"",new {@class="text-danger"})
            </div>

            <div class="input-box">
                <label>EmailID<span class="text-danger">*</span> </label>
                @Html.TextBoxFor(model=>model.EmailID,new {@class="form-control",placeholder="enter emailid"})
                @Html.ValidationMessageFor(model=>model.EmailID,"",new {@class="text-danger"})

            </div>

            <div class="input-box">
                <label>Password<span class="text-danger">*</span> </label>
                @Html.TextBoxFor(model=>model.Password,new {@class="form-control",placeholder="enter password"})
                @Html.ValidationMessageFor(model=>model.Password,"",new {@class="text-danger"})

            </div>


            <div class="input-box">
                <label>Confirm Password<span class="text-danger">*</span> </label>
                @Html.TextBoxFor(model=>model.ConfirmPassword,new {@class="form-control",placeholder="enter confirm password"})
                @Html.ValidationMessageFor(model=>model.ConfirmPassword,"",new {@class="text-danger"})

            </div>

            <div class="input-box">
                <label>Birth Date</label>
                @Html.EditorFor(model=>model.DOB)
            </div>


            <div class="input-box ">
                <label>Gender<span class="text-danger">*</span></label>
                
                        Male @Html.RadioButton("Gender","Male")
                        Female @Html.RadioButton("Gender","Female")
                        Other @Html.RadioButton("Gender","Other")
                
            </div>


            <div class="input-box">
                <label>Phone<span class="text-danger">*</span> </label>
                @Html.TextBoxFor(model=>model.Phone,new {@class="form-control",placeholder="enter phone"})
                @Html.ValidationMessageFor(model=>model.Phone,"",new {@class="text-danger"})
            </div>

            <div>
            <div class="column">
                <div class="input-box">
                    <lable style="color:green;font-size:20px;font-weight:bold">Department</lable>

                    @Html.DropDownListFor(model=>model.Dept,new List<SelectListItem>
                {
                new SelectListItem {Text="---select Department---",Value="select item"},
                new SelectListItem {Text="Web Dev",Value="Web Dev"},
                new SelectListItem {Text="RPA",Value="RPA"},
                new SelectListItem {Text="Java Dev",Value="Java Dev"},
                new SelectListItem {Text="Testing",Value="Testing"},
                new SelectListItem {Text="QA",Value="QA"}
                },new {@class="form-control"})
                </div>


                <div class="column">
                    <div class="input-box">
                        <label style="color:green;font-size:20px;font-weight:bold;">Role</label>
                          @Html.DropDownListFor(model=>model.Role,new List<SelectListItem>
                              {
                    new SelectListItem {Text="-select Role-",Value="select item"},
                    new SelectListItem {Text="Tester",Value="Tester"},
                    new SelectListItem {Text="Developer",Value="Developer"},
                    new SelectListItem {Text="HR",Value="HR"},
                    new SelectListItem {Text="Manager",Value="Manager"}
                    },new {@class="form-control"})
                      
                    </div>
                </div>
                </div>

                 <div class="input-box">
                    <label>Qualification <span class="text-danger">*</span></label>
                   @Html.CheckBoxFor(model=>model.qualification1,new{@id1="b-tech-true"})
                   @Html.Label("b-tech-true","B-tech")
                    @Html.CheckBoxFor(model=>model.qualification2,new{@id2="m-tech-true"})
                   @Html.Label("m-tech-true","M-tech")
                    @Html.CheckBoxFor(model=>model.qualification3,new{@id3="BE-true"})
                   @Html.Label("BE-true","BE")
                    @Html.CheckBoxFor(model=>model.Qualification,new{@id4="mba-true"})
                    @Html.Label("mba-true","MBA")




                </div>


               
                <div>
            <div class="input-box">
                <label>Fee<span class="text-danger">*</span> </label>
                @Html.TextBoxFor(model=>model.Fee,new {@class="form-control",placeholder="enter Fee"})
                @Html.ValidationMessageFor(model=>model.Fee,"",new {@class="text-danger"})
            </div>
                

                <div class="input-box">
                    <lable style="color:green;font-size:20px;font-weight:bold">Status</lable>

                    @Html.DropDownListFor(model=>model.Status,new List<SelectListItem>
                {
                    new SelectListItem {Text="--select status--",Value="True"},
                new SelectListItem {Text="Active",Value="True"},
                new SelectListItem {Text="InActive",Value="False"}

                },new {@class="form-control"})
                </div>

                </div>



                <br />
            </div>
            <div class="input-box">
                <p style="color:green;">If you have account, @Html.ActionLink("Login","Login","Application") </p>
            </div>
            
         
            <button >Submit </button>
            

       
        }
    </section>
   
    
</body>
</html>
